
# ======================================
# Docker Development Environment Configuration
# ======================================
# Copy this file to .env and modify the values as needed
# All ports map from host machine to container services

# ======================================
# DOCKER NETWORK CONFIGURATION
# ======================================

# Shared Docker Network
# Name of the external Docker network to connect to
# This allows the container to communicate with other services
# Default: cloudflared_shared-network (modify as needed)
SHARED_DOCKER_NETWORK=cloudflared_shared-network

# ======================================
# PORT CONFIGURATION
# ======================================

# SSH Configuration
# Port for SSH access to the development container
# Default: 2222 (maps to container port 22)
# Usage: ssh developer@localhost -p 2222
SSH_PORT=2222

# React Development Server
# Port for React development server (Create React App, Vite, etc.)
# Default: 3000 (standard React development port)
# Access: http://localhost:3000
REACT_PORT=3000

# Flask Development Server
# Port for Flask applications
# Default: 5000 (Flask's default port)
# Access: http://localhost:5000
FLASK_PORT=5000

# Django/FastAPI Server
# Port for Django development server or FastAPI applications
# Default: 8000 (Django's default port and common for FastAPI)
# Access: http://localhost:8000
DJANGO_PORT=8000

# FastAPI Alternative Port
# Alternative port for FastAPI applications (if running multiple services)
# Default: 8000 (same as Django, use different values if running both)
FASTAPI_PORT=8000

# Alternative Web Server
# Port for alternative web servers, custom APIs, or additional services
# Default: 8080 (common alternative web port)
# Access: http://localhost:8080
WEB_PORT=8080

# Jupyter Notebook Server
# Port for Jupyter Notebook/Lab interface
# Default: 8888 (Jupyter's default port)
# Access: http://localhost:8888
JUPYTER_PORT=8888

# ======================================
# DEVELOPMENT ENVIRONMENT SETTINGS
# ======================================

# Node.js Environment
# Set to 'development' for development mode, 'production' for production builds
NODE_ENV=development

# Python Path Configuration
# Additional Python path for your Python applications
# This helps Python find your custom modules and packages
PYTHONPATH=/app/python-apps

# ======================================
# CONTAINER CONFIGURATION
# ======================================

# Container Name
# Name for the Docker container (useful for identification and management)
CONTAINER_NAME=react-python-dev

# Docker Image Configuration
# Tag for the built Docker image
IMAGE_TAG=react-python-dev:latest

# ======================================
# SECURITY SETTINGS (IMPORTANT FOR PRODUCTION)
# ======================================
# Uncomment and set secure passwords for production use
# SSH_ROOT_PASSWORD=your_secure_root_password_here
# SSH_DEV_PASSWORD=your_secure_developer_password_here

# ======================================
# DATABASE CONFIGURATION (OPTIONAL)
# ======================================
# PostgreSQL Configuration
# POSTGRES_HOST=localhost
# POSTGRES_PORT=5432
# POSTGRES_DB=devdb
# POSTGRES_USER=developer
# POSTGRES_PASSWORD=secure_postgres_password

# MySQL Configuration  
# MYSQL_HOST=localhost
# MYSQL_PORT=3306
# MYSQL_DATABASE=devdb
# MYSQL_USER=developer
# MYSQL_PASSWORD=secure_mysql_password

# MongoDB Configuration
# MONGO_HOST=localhost
# MONGO_PORT=27017
# MONGO_DATABASE=devdb
# MONGO_USERNAME=developer
# MONGO_PASSWORD=secure_mongo_password

# ======================================
# CACHE AND MESSAGE QUEUE (OPTIONAL)
# ======================================
# Redis Configuration
# REDIS_HOST=localhost
# REDIS_PORT=6379
# REDIS_PASSWORD=secure_redis_password

# RabbitMQ Configuration
# RABBITMQ_HOST=localhost
# RABBITMQ_PORT=5672
# RABBITMQ_USER=developer
# RABBITMQ_PASSWORD=secure_rabbitmq_password

# ======================================
# API KEYS AND EXTERNAL SERVICES
# ======================================
# Add your API keys and external service credentials here
# OpenAI API
# OPENAI_API_KEY=your_openai_api_key_here

# GitHub Token (for accessing private repos or higher rate limits)
# GITHUB_TOKEN=your_github_personal_access_token

# AWS Configuration
# AWS_ACCESS_KEY_ID=your_aws_access_key_id
# AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
# AWS_DEFAULT_REGION=us-east-1

# Google Cloud Configuration
# GOOGLE_APPLICATION_CREDENTIALS=/path/to/service-account-key.json
# GOOGLE_CLOUD_PROJECT=your_project_id

# Azure Configuration
# AZURE_CLIENT_ID=your_azure_client_id
# AZURE_CLIENT_SECRET=your_azure_client_secret
# AZURE_TENANT_ID=your_azure_tenant_id

# ======================================
# DEVELOPMENT TOOLS CONFIGURATION
# ======================================
# Hot Reload Settings
# CHOKIDAR_USEPOLLING=true  # Enable if file watching doesn't work on your system
# WATCHPACK_POLLING=true    # Alternative polling option

# Debug Settings
# DEBUG=true
# LOG_LEVEL=debug

# Testing Configuration
# TEST_TIMEOUT=30000
# JEST_TIMEOUT=10000
